#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET -1 // Reset pin # (or -1 if sharing Arduino reset pin) -1 or 4
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
#define DHTTYPE DHT22 // DHT 22  (AM2302), AM2321
#define DHTPIN 2 // Digital pin connected to the DHT sensor

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

DHT dht(DHTPIN, DHTTYPE);

/***************************************************************
 * 字模 bitmap 制作网站: https://www.23bei.com/tool/965.html
 * 排列方式：16*16。从左到右，从上到下。横向8点左高位 
 ***************************************************************/
// 温
static const unsigned char temp[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x33,0xF8,0x12,0x08,0x03,0xF8,0x42,0x08,0x32,0x08,0x03,0xF8,
  0x00,0x00,0x17,0xFC,0x34,0xA4,0x24,0xA4,0x24,0xA4,0x64,0xA4,0x5F,0xFE,0x00,0x00
};

// 湿
static const unsigned char humi[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x23,0xFC,0x1A,0x04,0x03,0xFC,0x02,0x04,0x62,0x04,0x33,0xFC,
  0x00,0x00,0x04,0x92,0x14,0x92,0x22,0x94,0x22,0x9C,0x60,0x90,0x4F,0xFE,0x00,0x00
};

// 度
static const unsigned char degree[] PROGMEM = {
  0x00,0x00,0x00,0x80,0x00,0x80,0x3F,0xFC,0x22,0x10,0x22,0x10,0x2F,0xFC,0x22,0x10,
  0x23,0xF0,0x20,0x00,0x2F,0xF8,0x23,0x10,0x21,0xA0,0x60,0xC0,0x47,0x3E,0x08,0x02
};

// 热
static const unsigned char heat[] PROGMEM = {
  0x00,0x00,0x08,0x40,0x08,0x40,0x08,0x40,0x7D,0xF8,0x08,0x48,0x0D,0x48,0x78,0xC8,
  0x08,0xE8,0x09,0xBA,0x39,0x0E,0x40,0x00,0x20,0x4C,0x26,0x44,0x62,0x66,0x00,0x00
};

// 指
static const unsigned char indx[] PROGMEM = {
  0x00,0x00,0x11,0x00,0x11,0x08,0x11,0x78,0x11,0x80,0x7D,0x02,0x11,0x06,0x10,0xFC,
  0x1D,0xFC,0x71,0x04,0x51,0x04,0x11,0xFC,0x11,0x04,0x11,0xFC,0x71,0x04,0x01,0x00
};

// 露
static const unsigned char dew[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x3F,0xF8,0x7F,0xFC,0x61,0x84,0x7D,0xF4,0x1D,0xF0,0x00,0x40,
  0x3E,0xF8,0x23,0xC8,0x3F,0x30,0x08,0xFE,0x2F,0xF8,0x28,0x88,0x7E,0xF8,0x00,0x8C
};

// 点
static const unsigned char point[] PROGMEM = {
  0x00,0x00,0x01,0x00,0x01,0x00,0x01,0xFC,0x01,0x00,0x01,0x00,0x1F,0xF8,0x10,0x08,
  0x10,0x08,0x10,0x08,0x1F,0xF8,0x00,0x00,0x34,0x4C,0x26,0x44,0x62,0x26,0x00,0x00
};

//c
static const unsigned char c[] PROGMEM = {
  0x00,0x00,0x20,0x00,0x50,0x00,0x50,0xF0,0x23,0x0C,0x02,0x04,0x06,0x00,0x04,0x00,
  0x04,0x00,0x04,0x00,0x04,0x04,0x06,0x04,0x03,0x0C,0x01,0xF8,0x00,0x00,0x00,0x00
};

// Magnus-Tetens Approximation
float a = 17.27;
float b = 237.7;
float gamma(float T, float RH);
float dewPoint(float T, float RH);

void setup() {

    dht.begin();
    // put your setup code here, to run once:
    display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS);
}


void loop() {
    // Wait a few seconds between measurements.
    delay(10000);
    display.clearDisplay();

    // Reading temperature or humidity takes about 250 milliseconds!
    // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
    float h = dht.readHumidity();
    // Read temperature as Celsius
    float t = dht.readTemperature();



    // Compute heat index in Celsius 
    float hi = dht.computeHeatIndex(t, h);

    display.setTextColor(WHITE);
    display.setTextSize(2);

    // 显示文字 (左上角x坐标,左上角y坐标, 图形数组, 图形宽度像素点, 图形高度像素点, 设置颜色)
    display.drawBitmap(0, 0, temp, 16, 16, 1);        // 温
    display.drawBitmap(0, 16, humi, 16, 16, 1);       // 湿
    display.drawBitmap(16, 0, degree, 16, 16, 1);     // 度
    display.drawBitmap(16, 16, degree, 16, 16, 1);    // 度
    display.drawBitmap(0, 32, heat, 16, 16, 1);      // 热
    display.drawBitmap(16, 32, indx, 16, 16, 1);     //指
    display.drawBitmap(0, 48, dew, 16, 16, 1);       // 露
    display.drawBitmap(16, 48, point, 16, 16, 1);    // 点

    display.setCursor(32, 0);
    display.print(":");
    display.setCursor(32, 16);
    display.print(":");
    display.setCursor(32, 32);
    display.print(":");
    display.setCursor(32, 48);
    display.print(":");

    display.setCursor(42, 0);
    display.print(t, 1); // 

    display.setCursor(42, 16);
    display.print(h, 1); // 

    display.setCursor(42, 32);
    display.print(hi, 1); //    

    display.setCursor(42, 48);
    display.print(dewPoint(t, h), 1);

    display.drawBitmap(102,  0, c, 16, 16, 1); //c
    display.drawBitmap(102, 32, c, 16, 16, 1); //c
    display.drawBitmap(102, 48, c, 16, 16, 1); //c

    display.setCursor(92, 16);
    display.print("%RH");

    display.display();

}

float gamma(float T, float RH) {
  float value1 = (a * T) / (b + T) + log(RH / 100);
  return value1;
}

float dewPoint(float T, float RH) {
  float value2 = b * gamma(T, RH) / (a - gamma(T, RH));
  return value2;
}